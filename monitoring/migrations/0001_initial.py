# Generated by Django 3.2.4 on 2021-06-12 18:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import monitoring.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('docker_host', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Monitoring',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField(verbose_name='text')),
                ('cron_rule', models.CharField(max_length=255, verbose_name='cron_rule')),
                ('priority', models.BooleanField(default=0, verbose_name='priority')),
                ('condition', models.JSONField(verbose_name='condition')),
                ('is_active', models.BooleanField(default=False, verbose_name='is_active')),
                ('is_lock', models.BooleanField(default=False, verbose_name='is_lock')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date_created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='date_updated')),
                ('last_launch', models.DateTimeField(verbose_name='last_launch')),
                ('next_launch', models.DateTimeField(verbose_name='next_launch')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitoring', to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitroing', to='docker_host.host', verbose_name='host')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationPreferences',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('send_type', models.IntegerField(default=0, verbose_name='send_type')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to='docker_host.host', verbose_name='host')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
        ),
        migrations.CreateModel(
            name='MonitoringLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('result', models.JSONField(verbose_name='result')),
                ('is_passed', models.BooleanField(default=False, verbose_name='is_passed')),
                ('is_runtime_error', models.BooleanField(default=False, verbose_name='is_runtime_error')),
                ('duration', models.DurationField(verbose_name='duration')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date_created')),
                ('monitoring', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='log', to='monitoring.monitoring')),
            ],
        ),
        migrations.CreateModel(
            name='HTMLNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('users', models.JSONField(verbose_name='users')),
                ('message', models.JSONField(verbose_name='message')),
                ('date_expire', models.DateTimeField(default=monitoring.models.default_date_expire, verbose_name='date_created')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date_created')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='html_notifications', to='docker_host.host', verbose_name='host')),
            ],
        ),
    ]
